// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  username      String         @unique
  password      String
  name          String
  createdAt     DateTime       @default(now())
  lastLoginAt   DateTime?
  isActive      Boolean        @default(true)
  role          UserRole       @default(STUDENT)
  refreshTokens RefreshToken[]
  student       Student?
}

model RefreshToken {
  id         Int       @id @default(autoincrement())
  token      String    @unique
  userId     Int
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked    Boolean   @default(false)
  revokedAt  DateTime?
  createdAt  DateTime  @default(now())
  expiresAt  DateTime
  deviceInfo String?
  ipAddress  String?
}

model Student {
  id             Int            @id @default(autoincrement())
  userId         Int            @unique
  academicNumber Int            @unique
  department     Department
  studyLevel     Int
  approvalStatus ApprovalStatus @default(PENDING)
  user           User           @relation(fields: [userId], references: [id])
}

enum UserRole {
  ADMIN
  STUDENT
  SUPER_ADMIN
}

enum Department {
  IT
  SE
  COM
  IMSE
  CND
  MRE
}

enum ApprovalStatus {
  PENDING
  APPROVED
  REJECTED
}
