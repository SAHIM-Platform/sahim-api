{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/auth/signup": {
      "post": {
        "operationId": "AuthController_signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentSignUpDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "User registered successfully",
                    "accessToken": "eyJhbGciOi...",
                    "user": {
                      "id": 1,
                      "email": "student@example.com",
                      "username": "student1",
                      "name": "Student Name",
                      "role": "STUDENT"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data"
          }
        },
        "summary": "Register a new student user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/signin": {
      "post": {
        "operationId": "AuthController_signin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninAuthDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign in successful",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Sign in successful",
                    "accessToken": "eyJhbGciOi...",
                    "user": {
                      "id": 1,
                      "email": "user@example.com",
                      "username": "username",
                      "name": "User Name",
                      "role": "STUDENT"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          }
        },
        "summary": "Sign in with email and password",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Access token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Access token refreshed successfully",
                    "accessToken": "eyJhbGciOi..."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid refresh token"
          }
        },
        "security": [
          {
            "refreshToken": []
          }
        ],
        "summary": "Refresh access token using refresh token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/signout": {
      "post": {
        "operationId": "AuthController_signout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Sign out successful",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Sign out successful"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing tokens"
          }
        },
        "security": [
          {
            "access-token": []
          },
          {
            "refreshToken": []
          }
        ],
        "summary": "Sign out user and invalidate refresh token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/google/login": {
      "get": {
        "operationId": "AuthController_handleGoogleLogin",
        "parameters": [],
        "responses": {
          "302": {
            "description": "Redirect to Google login page"
          }
        },
        "summary": "Initiate Google OAuth login",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/google/callback": {
      "get": {
        "operationId": "AuthController_handleGoogleRedirect",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logged in successfully using Google",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Logged in successfully using google",
                    "accessToken": "eyJhbGciOi..."
                  }
                }
              }
            }
          }
        },
        "summary": "Handle Google OAuth callback",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/status": {
      "get": {
        "operationId": "AuthController_user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User is authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "msg": "Authenticated"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Check authentication status",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/users/test-approved-student": {
      "get": {
        "operationId": "UsersController_testApprovedStudent",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully verified as an approved student or admin",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "You are an approved student or an admin 123!"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Test endpoint for approved students",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/me/bookmarks": {
      "get": {
        "operationId": "UsersController_getUserBookmarks",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort order for bookmarked threads",
            "schema": {
              "enum": [
                "latest",
                "oldest",
                "most_commented",
                "most_voted"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of bookmarked threads retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "thread_id": 1,
                        "category_id": 1,
                        "author_user_id": 1,
                        "title": "Thread Title",
                        "content": "Thread content",
                        "thumbnail_url": null,
                        "created_at": "2023-01-01T00:00:00.000Z",
                        "author": {
                          "id": 1,
                          "username": "username",
                          "name": "User Name"
                        },
                        "category": {
                          "category_id": 1,
                          "name": "Category Name"
                        },
                        "_count": {
                          "comments": 5,
                          "votes": 10
                        },
                        "votes": {
                          "score": 8,
                          "user_vote": "UP",
                          "counts": {
                            "up": 9,
                            "down": 1
                          }
                        },
                        "bookmarked": true
                      }
                    ],
                    "meta": {
                      "total": 15,
                      "page": 1,
                      "limit": 10,
                      "totalPages": 2
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get current user bookmarks",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/me": {
      "get": {
        "operationId": "UsersController_getMe",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 1,
                    "name": "User Name",
                    "username": "username",
                    "email": "user@example.com",
                    "role": "STUDENT"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get current user profile",
        "tags": [
          "Users"
        ]
      }
    },
    "/threads/search": {
      "get": {
        "operationId": "ThreadsController_searchThreads",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "required": true,
            "in": "query",
            "description": "Search query to find threads by title or content",
            "schema": {
              "maxLength": 100,
              "example": "authentication",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Threads matching the search query",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "id": 1,
                      "title": "Thread Title",
                      "createdAt": "2025-04-08T03:10:41.929Z",
                      "author": {
                        "id": 1,
                        "name": "User Name"
                      },
                      "commentsCount": 0
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Query parameter is missing or empty"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Search threads by title or content",
        "tags": [
          "Threads"
        ]
      }
    },
    "/threads": {
      "post": {
        "operationId": "ThreadsController_create",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateThreadDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Thread created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "thread_id": 12,
                    "category_id": 1,
                    "author_user_id": 2,
                    "title": "hi there",
                    "content": "some content",
                    "thumbnail_url": null,
                    "created_at": "2025-04-09T20:30:41.622Z",
                    "author": {
                      "id": 2,
                      "username": "username",
                      "name": "User Name"
                    },
                    "category": {
                      "category_id": 1,
                      "name": "Category Name",
                      "author_user_id": null
                    },
                    "_count": {
                      "comments": 0,
                      "votes": 0
                    },
                    "votes": {
                      "score": 0,
                      "user_vote": null,
                      "counts": {
                        "up": 0,
                        "down": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Category not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new thread",
        "tags": [
          "Threads"
        ]
      },
      "get": {
        "operationId": "ThreadsController_findAll",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort order for threads",
            "schema": {
              "enum": [
                "LATEST",
                "POPULAR",
                "TRENDING"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "category_id",
            "required": false,
            "in": "query",
            "description": "Filter threads by category ID",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of threads retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "thread_id": 1,
                        "category_id": 1,
                        "author_user_id": 1,
                        "title": "Thread Title",
                        "content": "Thread Content",
                        "thumbnail_url": null,
                        "created_at": "2025-04-08T03:10:41.929Z",
                        "author": {
                          "id": 1,
                          "username": "username",
                          "name": "User Name"
                        },
                        "category": {
                          "category_id": 1,
                          "name": "Category Name",
                          "author_user_id": null
                        },
                        "_count": {
                          "comments": 1,
                          "votes": 0
                        },
                        "votes": {
                          "score": 0,
                          "user_vote": null,
                          "counts": {
                            "up": 0,
                            "down": 0
                          }
                        },
                        "bookmarked": false
                      }
                    ],
                    "meta": {
                      "total": 100,
                      "page": 1,
                      "limit": 10,
                      "totalPages": 10
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all threads with pagination and filtering",
        "tags": [
          "Threads"
        ]
      }
    },
    "/threads/categories": {
      "get": {
        "operationId": "ThreadsController_getAllCategories",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "category_id": 1,
                      "name": "Category Name",
                      "description": "Category Description",
                      "created_at": "2025-04-08T03:10:41.929Z",
                      "updated_at": "2025-04-08T03:10:41.929Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all thread categories",
        "tags": [
          "Threads"
        ]
      }
    },
    "/threads/{id}": {
      "get": {
        "operationId": "ThreadsController_findOne",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Thread ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "includeComments",
            "required": false,
            "in": "query",
            "description": "Include comments in the response",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeVotes",
            "required": false,
            "in": "query",
            "description": "Include vote information in the response",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thread retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "thread_id": 1,
                    "category_id": 1,
                    "author_user_id": 1,
                    "title": "Thread Title",
                    "content": "Thread Content",
                    "thumbnail_url": null,
                    "created_at": "2025-04-08T03:10:41.929Z",
                    "author": {
                      "id": 1,
                      "username": "username",
                      "name": "User Name"
                    },
                    "category": {
                      "category_id": 1,
                      "name": "Category Name",
                      "author_user_id": null
                    },
                    "votes": {
                      "score": 0,
                      "user_vote": null,
                      "counts": {
                        "up": 0,
                        "down": 0
                      }
                    },
                    "comments": [
                      {
                        "comment_id": 1,
                        "thread_id": 1,
                        "author_user_id": 2,
                        "content": "Comment Content",
                        "created_at": "2025-04-09T20:39:41.242Z",
                        "author": {
                          "id": 2,
                          "username": "commenter"
                        },
                        "votes": {
                          "score": 0,
                          "user_vote": null,
                          "counts": {
                            "up": 0,
                            "down": 0
                          }
                        }
                      }
                    ],
                    "_count": {
                      "comments": 1,
                      "votes": 0
                    },
                    "bookmarked": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Thread not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get a thread by ID",
        "tags": [
          "Threads"
        ]
      },
      "patch": {
        "operationId": "ThreadsController_update",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Thread ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateThreadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Thread updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "thread_id": 1,
                    "category_id": 1,
                    "author_user_id": 1,
                    "title": "Updated Thread Title",
                    "content": "Updated Thread Content",
                    "thumbnail_url": null,
                    "created_at": "2025-04-08T03:10:41.929Z",
                    "author": {
                      "id": 1,
                      "username": "username",
                      "name": "User Name"
                    },
                    "category": {
                      "category_id": 1,
                      "name": "Category Name",
                      "author_user_id": null
                    },
                    "_count": {
                      "comments": 0,
                      "votes": 0
                    },
                    "votes": {
                      "score": 0,
                      "user_vote": null,
                      "counts": {
                        "up": 0,
                        "down": 0
                      }
                    },
                    "bookmarked": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Not the thread author"
          },
          "404": {
            "description": "Thread not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update a thread",
        "tags": [
          "Threads"
        ]
      },
      "delete": {
        "operationId": "ThreadsController_remove",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Thread ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thread deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Not the thread author"
          },
          "404": {
            "description": "Thread not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete a thread",
        "tags": [
          "Threads"
        ]
      }
    },
    "/threads/{id}/comments": {
      "post": {
        "operationId": "ThreadsController_createComment",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Thread ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "comment_id": 1,
                    "thread_id": 1,
                    "author_user_id": 2,
                    "content": "Comment Content",
                    "created_at": "2025-04-09T20:39:41.242Z",
                    "author": {
                      "id": 2,
                      "username": "commenter"
                    },
                    "votes": {
                      "score": 0,
                      "user_vote": null,
                      "counts": {
                        "up": 0,
                        "down": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Thread not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a comment on a thread",
        "tags": [
          "Threads"
        ]
      },
      "get": {
        "operationId": "ThreadsController_getComments",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Thread ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort order for comments",
            "schema": {
              "default": "latest",
              "type": "string",
              "enum": [
                "latest",
                "oldest",
                "most_commented",
                "most_voted"
              ]
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "comment_id": 1,
                        "thread_id": 1,
                        "author_user_id": 2,
                        "content": "Comment Content",
                        "created_at": "2025-04-09T20:39:41.242Z",
                        "author": {
                          "id": 2,
                          "username": "commenter"
                        },
                        "votes": {
                          "score": 0,
                          "user_vote": null,
                          "counts": {
                            "up": 0,
                            "down": 0
                          }
                        }
                      }
                    ],
                    "meta": {
                      "total": 20,
                      "page": 1,
                      "limit": 10,
                      "totalPages": 2
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Thread not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get comments for a thread",
        "tags": [
          "Threads"
        ]
      }
    },
    "/threads/{id}/comments/{commentId}": {
      "patch": {
        "operationId": "ThreadsController_updateComment",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Thread ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "commentId",
            "required": true,
            "in": "path",
            "description": "Comment ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "comment_id": 1,
                    "thread_id": 1,
                    "author_user_id": 2,
                    "content": "Updated Comment Content",
                    "created_at": "2025-04-09T20:39:41.242Z",
                    "author": {
                      "id": 2,
                      "username": "commenter"
                    },
                    "votes": {
                      "score": 0,
                      "user_vote": null,
                      "counts": {
                        "up": 0,
                        "down": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Not the comment author"
          },
          "404": {
            "description": "Thread or comment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update a comment",
        "tags": [
          "Threads"
        ]
      },
      "delete": {
        "operationId": "ThreadsController_removeComment",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Thread ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "commentId",
            "required": true,
            "in": "path",
            "description": "Comment ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Not the comment author"
          },
          "404": {
            "description": "Thread or comment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete a comment",
        "tags": [
          "Threads"
        ]
      }
    },
    "/threads/{id}/vote": {
      "post": {
        "operationId": "ThreadsController_voteThread",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Thread ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vote recorded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": true,
                    "updatedVotes": {
                      "score": 1,
                      "user_vote": "UP",
                      "counts": {
                        "up": 1,
                        "down": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid vote type"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Thread not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Vote on a thread",
        "tags": [
          "Threads"
        ]
      }
    },
    "/threads/{id}/comments/{commentId}/vote": {
      "post": {
        "operationId": "ThreadsController_voteComment",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Thread ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "commentId",
            "required": true,
            "in": "path",
            "description": "Comment ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vote recorded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": true,
                    "updatedVotes": {
                      "score": 1,
                      "user_vote": "UP",
                      "counts": {
                        "up": 1,
                        "down": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid vote type"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Thread or comment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Vote on a comment",
        "tags": [
          "Threads"
        ]
      }
    },
    "/threads/{id}/bookmark": {
      "post": {
        "operationId": "ThreadsController_bookmarkThread",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Thread ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Thread bookmarked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": true,
                    "bookmark": {
                      "user_id": 1,
                      "thread_id": 1,
                      "created_at": "2025-04-09T20:39:41.242Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Thread not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Bookmark a thread",
        "tags": [
          "Threads"
        ]
      },
      "delete": {
        "operationId": "ThreadsController_unbookmarkThread",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Thread ID",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thread unbookmarked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Thread not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Unbookmark a thread",
        "tags": [
          "Threads"
        ]
      }
    },
    "/admins": {
      "post": {
        "operationId": "AdminsController_createAdmin",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminSignupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admins/{id}": {
      "delete": {
        "operationId": "AdminsController_deleteAdmin",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Admin user created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Admin user created successfully",
                    "user": {
                      "id": 1,
                      "email": "admin@example.com",
                      "username": "admin1",
                      "name": "Admin Name",
                      "role": "ADMIN"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Admin with this email or username already exists"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions (must be SUPER_ADMIN)"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new admin user",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admins/students/{id}/approve": {
      "patch": {
        "operationId": "AdminsController_approveStudent",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Student ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student approved successfully"
          },
          "400": {
            "description": "Bad Request - Student not found, not a student, or already approved"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Approve a student account",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admins/students/{id}/reject": {
      "patch": {
        "operationId": "AdminsController_rejectStudent",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Student ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student rejected successfully"
          },
          "400": {
            "description": "Bad Request - Student not found, not a student, already rejected, or already approved"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Reject a student account",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admins/categories": {
      "post": {
        "operationId": "AdminsController_createCategory",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 1,
                    "name": "Category Name",
                    "description": "Category Description",
                    "createdAt": "2024-04-09T12:00:00Z",
                    "updatedAt": "2024-04-09T12:00:00Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "409": {
            "description": "Conflict - Category with this name already exists"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new category",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admins/categories/{id}": {
      "delete": {
        "operationId": "AdminsController_deleteCategory",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Category ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Not Found - Category not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete a category",
        "tags": [
          "Admin"
        ]
      },
      "patch": {
        "operationId": "AdminsController_updateCategory",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Category ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": 1,
                    "name": "Updated Category Name",
                    "description": "Updated Category Description",
                    "updatedAt": "2024-04-09T12:00:00Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          },
          "404": {
            "description": "Not Found - Category not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update a category",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admins/users/students": {
      "get": {
        "operationId": "AdminsController_getAllStudents",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filter by approval status",
            "schema": {
              "enum": [
                "PENDING",
                "APPROVED",
                "REJECTED"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "minimum": 1,
              "default": 1,
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "example": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of students retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "id": 1,
                        "email": "student@example.com",
                        "username": "student1",
                        "name": "Student Name",
                        "approvalStatus": "PENDING"
                      }
                    ],
                    "meta": {
                      "total": 1,
                      "page": 1,
                      "limit": 10
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all students with optional filtering",
        "tags": [
          "Admin"
        ]
      }
    }
  },
  "info": {
    "title": "SAHIM API Documentation",
    "description": "SAHIM API is the backend service that powers the SAHIM platform.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "access-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      },
      "cookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "refreshToken",
        "description": "Refresh token for authentication"
      }
    },
    "schemas": {
      "StudentSignUpDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "user@example.com",
            "maxLength": 255
          },
          "username": {
            "type": "string",
            "description": "Username (letters, numbers, underscores and hyphens only)",
            "example": "johndoe",
            "minLength": 3,
            "maxLength": 50
          },
          "name": {
            "type": "string",
            "description": "User full name",
            "example": "John Doe",
            "minLength": 3,
            "maxLength": 100
          },
          "password": {
            "type": "string",
            "description": "Password (must contain uppercase, lowercase, number and special character)",
            "example": "Password123!",
            "minLength": 8,
            "maxLength": 72
          },
          "academicNumber": {
            "type": "string",
            "description": "Academic number (must be exactly 13 digits)",
            "example": "1234567890123",
            "pattern": "^\\d{13}$"
          },
          "department": {
            "type": "string",
            "description": "Student department",
            "enum": [
              "IT",
              "SE",
              "COM",
              "IMSE",
              "CND",
              "MRE"
            ],
            "example": "IT"
          },
          "studyLevel": {
            "type": "number",
            "description": "Study level (1-5)",
            "example": 3,
            "minimum": 1,
            "maximum": 5
          }
        },
        "required": [
          "email",
          "username",
          "name",
          "password",
          "academicNumber",
          "department",
          "studyLevel"
        ]
      },
      "SigninAuthDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "Password123!",
            "minLength": 6
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CreateThreadDto": {
        "type": "object",
        "properties": {
          "category_id": {
            "type": "number",
            "description": "The ID of the category this thread belongs to",
            "example": 1,
            "minimum": 1
          },
          "title": {
            "type": "string",
            "description": "The title of the thread",
            "example": "How to implement authentication in NestJS",
            "minLength": 5,
            "maxLength": 200
          },
          "content": {
            "type": "string",
            "description": "The main content of the thread",
            "example": "I am trying to implement authentication in my NestJS application...",
            "minLength": 10,
            "maxLength": 5000
          },
          "thumbnail_url": {
            "type": "string",
            "description": "Optional URL to a thumbnail image for the thread",
            "example": "https://example.com/images/thumbnail.jpg",
            "maxLength": 500
          }
        },
        "required": [
          "category_id",
          "title",
          "content"
        ]
      },
      "UpdateThreadDto": {
        "type": "object",
        "properties": {
          "category_id": {
            "type": "number",
            "description": "The ID of the category this thread belongs to",
            "example": 1,
            "minimum": 1
          },
          "title": {
            "type": "string",
            "description": "The title of the thread",
            "example": "How to implement authentication in NestJS",
            "minLength": 5,
            "maxLength": 200
          },
          "content": {
            "type": "string",
            "description": "The main content of the thread",
            "example": "I am trying to implement authentication in my NestJS application...",
            "minLength": 10,
            "maxLength": 5000
          },
          "thumbnail_url": {
            "type": "string",
            "description": "Optional URL to a thumbnail image for the thread",
            "example": "https://example.com/images/thumbnail.jpg",
            "maxLength": 500
          }
        }
      },
      "CreateCommentDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The content of the comment",
            "example": "This is a helpful comment about the thread",
            "minLength": 1,
            "maxLength": 2000
          }
        },
        "required": [
          "content"
        ]
      },
      "UpdateCommentDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The content of the comment",
            "example": "This is an updated comment",
            "minLength": 1,
            "maxLength": 2000
          }
        }
      },
      "VoteDto": {
        "type": "object",
        "properties": {
          "vote_type": {
            "type": "string",
            "description": "The type of vote (UP or DOWN)",
            "enum": [
              "UP",
              "DOWN"
            ],
            "example": "UP"
          }
        },
        "required": [
          "vote_type"
        ]
      },
      "AdminSignupDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "user@example.com",
            "maxLength": 255
          },
          "username": {
            "type": "string",
            "description": "Username (letters, numbers, underscores and hyphens only)",
            "example": "johndoe",
            "minLength": 3,
            "maxLength": 50
          },
          "name": {
            "type": "string",
            "description": "User full name",
            "example": "John Doe",
            "minLength": 3,
            "maxLength": 100
          },
          "password": {
            "type": "string",
            "description": "Password (must contain uppercase, lowercase, number and special character)",
            "example": "Password123!",
            "minLength": 8,
            "maxLength": 72
          },
          "role": {
            "type": "string",
            "description": "Admin role (defaults to ADMIN)",
            "enum": [
              "ADMIN",
              "STUDENT",
              "SUPER_ADMIN"
            ],
            "default": "ADMIN"
          }
        },
        "required": [
          "email",
          "username",
          "name",
          "password"
        ]
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Category name",
            "example": "Programming",
            "minLength": 2,
            "maxLength": 50
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Updated category name",
            "example": "Web Development",
            "minLength": 2,
            "maxLength": 50
          }
        },
        "required": [
          "name"
        ]
      }
    }
  }
}